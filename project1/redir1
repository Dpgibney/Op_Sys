void redirect(char *args[], char *filename, int option) {
    pid_t pid;
    int fd;
    int err = -1;

if((pid = fork())==-1){
    printf("Child process could not be created\n");
    }
    
    if(pid==0){ //Output redirection
    if (option == 0){ //unsure of what option is for
     // command is outputting to file (CMD > FILE)
        fd = open(filename, O_RDWR | O_CREAT | O_TRUNC, 0755);
        if ((fd = open(filename, O_RDWR | O_CREAT | O_TRUNC, 0755)) == -1) {
            fprintf(stderr, "shell1: error creating file: %s\n", strerror(errno));
            return EXIT_FAILURE;
        }
        dup2(fd, STDOUT_FILENO);
        close(fd);
    }
        
    } 
    else{
    if (option == 1)
        // file is inputting to command (CMD < FILE)
        fd = open(filename, O_RDWR, 0755);
        if ((fd = open(filename, O_RDWR, 0755)) == -1) {
            fprintf(stderr, "shell2: no such file or directory: %s\n", strerror(errno));
            return EXIT_FAILURE;
        }
        dup2(fd, STDIN_FILENO);
        close(fd);
    return 0;
}

/* //tokenizer pipe check
for (i = 0; i < strlen(token); i++)
{
    if (token[i] == '|' || token[i] == '>' || token[i] == '<' || token[i] == '&') 
    {
        if (i-start > 0)
        {
            memcpy(temp, token + start, i - start);
            temp[i-start] = '\0';
            bucket = addToken(bucket, temp, numI);
            numI++;
        }
*/
